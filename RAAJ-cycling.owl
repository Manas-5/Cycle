Prefix(:=<https://github.com/Manas-5/Cycle/blob/main/RAAJ-cycling.owl#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(Cycle:=<http://www.semanticweb.org/manasraaj/ontologies/2023/11/untitled-ontology-4/Cycle#>)


Ontology(<https://github.com/Manas-5/Cycle/blob/main/RAAJ-cycling.owl>

Declaration(Class(<http://xmlns.com/foaf/0.1/Organization>))
Declaration(Class(:Climber))
Declaration(Class(:Director))
Declaration(Class(:Doctor))
Declaration(Class(:FlatStage))
Declaration(Class(:GoodTeam))
Declaration(Class(:IndividualTimeTrial))
Declaration(Class(:MountainStage))
Declaration(Class(:OneDayRace))
Declaration(Class(:Person))
Declaration(Class(:Prologue))
Declaration(Class(:Race))
Declaration(Class(:RaceCyclist))
Declaration(Class(:RacePerson))
Declaration(Class(:Rider))
Declaration(Class(:SeveralStagesRace))
Declaration(Class(:Spectator))
Declaration(Class(:Sprinter))
Declaration(Class(:Stage))
Declaration(Class(:Team))
Declaration(Class(:TeamPerson))
Declaration(Class(:TeamTimeTrial))
Declaration(Class(:TimeTrial))
Declaration(ObjectProperty(:belongsTo))
Declaration(ObjectProperty(:composedOf))
Declaration(ObjectProperty(:participatesIn))
Declaration(DataProperty(:hasAge))
Declaration(DataProperty(:hasName))
Declaration(DataProperty(:hasNationality))
Declaration(DataProperty(:hasNumber))
Declaration(NamedIndividual(:Astana))
Declaration(NamedIndividual(:Christopher_Froom))
Declaration(NamedIndividual(:Eddy_Merckx))
Declaration(NamedIndividual(:Giro))
Declaration(NamedIndividual(:Miguel_Indurain))
Declaration(NamedIndividual(:Sky))
Declaration(NamedIndividual(:Tour_de_France))
Declaration(NamedIndividual(:US_Postal))
Declaration(NamedIndividual(:Vuelta))

############################
#   Data Properties
############################

# Data Property: :hasAge (:hasAge)

DataPropertyDomain(:hasAge :Person)
DataPropertyRange(:hasAge xsd:integer)

# Data Property: :hasName (:hasName)

DataPropertyDomain(:hasName :Person)
DataPropertyRange(:hasName xsd:string)

# Data Property: :hasNationality (:hasNationality)

DataPropertyDomain(:hasNationality :Person)
DataPropertyRange(:hasNationality xsd:string)

# Data Property: :hasNumber (:hasNumber)

DataPropertyDomain(:hasNumber :Stage)
DataPropertyRange(:hasNumber xsd:integer)



############################
#   Classes
############################

# Class: :Climber (:Climber)

SubClassOf(:Climber :RaceCyclist)
DisjointClasses(:Climber :Rider)
DisjointClasses(:Climber :Sprinter)

# Class: :Director (:Director)

SubClassOf(:Director :TeamPerson)

# Class: :Doctor (:Doctor)

SubClassOf(:Doctor :TeamPerson)

# Class: :FlatStage (:FlatStage)

SubClassOf(:FlatStage :Stage)
DisjointClasses(:FlatStage :MountainStage)
DisjointClasses(:FlatStage :TimeTrial)

# Class: :GoodTeam (:GoodTeam)

EquivalentClasses(:GoodTeam ObjectIntersectionOf(ObjectMinCardinality(3 ObjectInverseOf(:belongsTo) :Climber) ObjectExactCardinality(1 ObjectInverseOf(:belongsTo) :Rider)))
SubClassOf(:GoodTeam :Team)

# Class: :IndividualTimeTrial (:IndividualTimeTrial)

SubClassOf(:IndividualTimeTrial :TimeTrial)
DisjointClasses(:IndividualTimeTrial :TeamTimeTrial)

# Class: :MountainStage (:MountainStage)

SubClassOf(:MountainStage :Stage)
DisjointClasses(:MountainStage :TimeTrial)

# Class: :OneDayRace (:OneDayRace)

SubClassOf(:OneDayRace :Race)
DisjointClasses(:OneDayRace :SeveralStagesRace)

# Class: :Prologue (:Prologue)

EquivalentClasses(:Prologue DataHasValue(:hasNumber "1"^^xsd:integer))
SubClassOf(:Prologue :Stage)

# Class: :Race (:Race)

DisjointUnion(:Race :OneDayRace :SeveralStagesRace)

# Class: :RaceCyclist (:RaceCyclist)

SubClassOf(:RaceCyclist :TeamPerson)
DisjointUnion(:RaceCyclist :Climber :Rider :Sprinter)

# Class: :RacePerson (:RacePerson)

SubClassOf(:RacePerson :Person)

# Class: :Rider (:Rider)

SubClassOf(:Rider :RaceCyclist)
DisjointClasses(:Rider :Sprinter)

# Class: :SeveralStagesRace (:SeveralStagesRace)

SubClassOf(:SeveralStagesRace :Race)

# Class: :Spectator (:Spectator)

SubClassOf(:Spectator :Person)

# Class: :Sprinter (:Sprinter)

SubClassOf(:Sprinter :RaceCyclist)

# Class: :Team (:Team)

EquivalentClasses(:Team ObjectIntersectionOf(ObjectExactCardinality(1 ObjectInverseOf(:belongsTo) :Director) ObjectExactCardinality(1 ObjectInverseOf(:belongsTo) :Doctor) ObjectExactCardinality(10 ObjectInverseOf(:belongsTo) :RaceCyclist)))
SubClassOf(:Team <http://xmlns.com/foaf/0.1/Organization>)

# Class: :TeamPerson (:TeamPerson)

SubClassOf(:TeamPerson :Person)
DisjointUnion(:TeamPerson :Director :Doctor :RaceCyclist)

# Class: :TeamTimeTrial (:TeamTimeTrial)

SubClassOf(:TeamTimeTrial :TimeTrial)

# Class: :TimeTrial (:TimeTrial)

SubClassOf(:TimeTrial :Stage)
DisjointUnion(:TimeTrial :IndividualTimeTrial :TeamTimeTrial)


############################
#   Named Individuals
############################

# Individual: :Astana (:Astana)

ClassAssertion(:Team :Astana)

# Individual: :Christopher_Froom (:Christopher_Froom)

ClassAssertion(:Rider :Christopher_Froom)

# Individual: :Eddy_Merckx (:Eddy_Merckx)

ClassAssertion(:Climber :Eddy_Merckx)

# Individual: :Giro (:Giro)

ClassAssertion(:SeveralStagesRace :Giro)

# Individual: :Miguel_Indurain (:Miguel_Indurain)

ClassAssertion(:Rider :Miguel_Indurain)

# Individual: :Sky (:Sky)

ClassAssertion(:Team :Sky)

# Individual: :Tour_de_France (:Tour_de_France)

ClassAssertion(:SeveralStagesRace :Tour_de_France)

# Individual: :US_Postal (:US_Postal)

ClassAssertion(:Team :US_Postal)

# Individual: :Vuelta (:Vuelta)

ClassAssertion(:SeveralStagesRace :Vuelta)


DisjointClasses(:Director :Doctor :RaceCyclist)
DisjointClasses(:RacePerson :Spectator :TeamPerson)
)